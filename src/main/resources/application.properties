
##端口号
server:
  port: 8080
  use-forward-headers: true
  servlet:
    session:
      timeout: 86400
spring:
  transaction:
    rollback-on-commit-failure: true
# 数据库访问配置
# 主数据源，默认的
#datasource
spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
spring.datasource.tomcat.driver-class-name= com.mysql.cj.jdbc.Driver
#mybatis
spring.datasource.url= jdbc:mysql://120.79.15.183:3306/travel?useUnicode=true&characterEncoding=UTF-8&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&useSSL=false
spring.datasource.username= root
spring.datasource.password= 123456
spring.datasource.tomcat.default-auto-commit= true
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle= 5
spring.datasource.maxActive= 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait= 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis= 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis= 300000
spring.datasource.validationQuery= SELECT 1 FROM DUAL
spring.datasource.testWhileIdle= true
spring.datasource.testOnBorrow= false
spring.datasource.testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters= stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat= true


##mybatis-plus mapper xml 文件地址
mybatis-plus.mapper-locations= classpath*:/mappers/*.xml
##mybatis-plus type-aliases 文件地址
mybatis-plus.type-aliases-package= com.hq.travel.entity




#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
#spring.redis.password=123456
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#超时一定要大于0
spring.redis.timeout=3000
spring.session.store-type=redis
## redis
#redis:
#  database: 0
#  host: 127.0.0.1
#  port: 6379
#  password:
#  jedis:
#    pool:
#      #最大连接数据库连接数,设 0 为没有限制
#      max-active: 8
#      #最大等待连接中的数量,设 0 为没有限制
#      max-idle: 8
#      #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
#      max-wait: -1
#      #最小等待连接中的数量,设 0 为没有限制
#      min-idle: 0
#  timeout: 5000


# 日志
logging:
 file: ./logs/log.log
 level:
   org:
     springframework:
       boot:
         autoconfigure: error
application:
  formatted-version: 1.0.0

